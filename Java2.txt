	*Maven 표준 프로젝트 디렉토리 구조


프로젝트-어떤 목적을 수행하는것
	=App 만들려면 소스파일,그림,동영상,사진,소리,설정정보 파일 등등이 필요하다.
	->위의 많은 파일들을 체계적으로 관리 할 필요가있다(정리정돈)
	 디렉토리에 분류하고 배치하는것. 국제 관례에 맞춰서


**국제 관례


java-lang/ <-프로젝트 폴터
	src/ <- app 제작에 관련된 파일을 두는 폴더
	 main/ <-App 관련 파일을 두는 폴더
	      java/      <- 자바 소스 파일을 두는 폴더
	   resources/  <- 기타 설정 파일이나 기타파일 두는 폴더
	 test/ <- App 소스를  테스트하는 파일을 두는 폴더	
	     java/ 	      <- 단위테스트 자바소스파일을 두는 폴더
	   resources/  <- 테스트에 관련된 설정 파일등을 두는 폴더

	*자바 패키지

자바 패키지란 자바 소스파일의 역활에 따라 관리하기 쉽게 여러개의 폴더에 분류,배치 하는것


src/
 main/
  java/
   *io/ *자바소스 파일을 역할에따라 분류할 하위폴더를 자바패키지라고 한다
  *db/
   *ui/

자바 패키지 디렉토리 구조





 회사(조직)도메인명 / 제품명(서비스명)/ 역할 / *.java

왜 회사 도메인명을 쓰는가 ? 전세계에서 유일하기때문에 다른회사와 중복될 일이 없다.
예를 들어서 com/micorsoft   보통 micorosoft.com 인데 com은 컴파니 약자 이므로  com.microsoft로 구분         
 	          /bitcampt
상위 조직에서 하위 조직 순으로 디렉토리 계층을 구성 


com/bitcamp/javaedu/lang
com/bitcamp/git/user

패키지 밑에있는 소스파일들은 반드시 .으로 해줘야하고
 소스파일제일 윗줄에 package com.eomcs.lang.ex01; 써줘야한다. 


  * 자바패키지와 컴파일,실행 관계
패키지에 소속된 클래스는 첫번째 소스코일에 작성한다.

실행을 할때는 패키지가 있는 경로까지만 지정하고 그뒤에는 클래스 경로를 입력하고 실행시킨다.

자바소스파일이 무수히 많기때문에
자바소스파일도 여러 폴더를 만들어서 분류해야한다.
그걸 자바 패키지라고 부른다.
어느 패키지에 선언헀는지 제일 첫줄 소스에 정확히 지정해줘야한다.
컴파일 할때도 그패키지 폴더 밑에 둔다
실행할때도 패키지경로를 입력하고 실행시킨다


src/
 main/
  java/ <- 여기까지는 일반 폴더
   com/ <- 패키지 시작
    eomcs/
     lang/
      ex01/
       Exam0300.java

중요한건        Exam0300.java 소스파일 제일 첫줄 패키지에
package com.eomcs.lang.ex01; <- 1.패키지에 소속될경우 소스파일첫 명령으로 package를 지정해야한다.
		 	       2.소스파일도 관리하기 쉽게 패키지에 해당하는 폴더에 두어야 한다.
       Exam0300.java -< 컴파일할때 패키지에 해당하는 폴더에 .class 파일이 놓인다.
javac -d bin -encoding src/main/java/com/eomcs/lang/ex01/Exam0300.java

java - cp bin com.eomcs.lang.ex01.Exam0300
클래스 이름을 지정할때 패키지명도 함께 지정해야한다.





                        실습 프로젝트 준비

java-lang 프로젝트: 자바문법 예제

	



board-project 프로젝트: 실무에서 문법을 활용하는 예를 배우는 프로젝트

첫 프로젝트 스탠드얼론, 중간에 db프로젝트 , 또중간에 클라이언트 서버 프로젝트 ,최종목표 웹프로젝트

----------------------------------->     문법 활용 기술 연마 
 	업그레이드	            어플리케이션 아키텍쳐의 구조 변화의 역사(20년)를 압축해서 경험

				***실무에서 사용하는 유명 라이브러리나 프레임워크를 직접구현
				->기술의 깊게 배운다, 실력향상 시키는게 목적 (죽어라공부할것)***

				실무에서 사용하는 라이브러리나 프레임워크 사용법 연습


	* Gradle 빌드 도구를 이용하여 프로젝트 준비


빌드- app을 만들기위해 수행하는 개발 과정을 통칭			 배치
        개발과정에선 컴파일하고 테스트를 패키징한다 			 deploy(배포)
.jar가 (java archive) java 개발과정에선 컴파일하고 테스트를 패키징하고 서버에 배포한다
단지라는 뜻도있다.				  ->API 문서 ->(jar,war)

.war web Archive
			빌드할때마다 직접 명령 실행 하면 번거롭기때문에
			빌드를 자동화시킨다.
		빌드 작업을 기술 -> 빌드 도구 -> 빌드 작업을 순서대로 일괄적으로 수행
		빌드 스크립트 파일

**script(명령문을 작성할 때 사용하는 간단한 프로그래밍 언어)

*jar( java Archivie)
*.war(web Archive)


	
		*프로젝트 빌드 와 빌드도구

중요중요!!!!!!!!!!
외울것!!!!!!!!!!
  1.Ant 
 build.xml (Ant의 스크립트 파일)
Ant의 빌드 스크립트 파일
xml은 태그 문법이기 때문에
 
ant 쓰다 바뀐이유 의존 라이브러리 관리 자동화

 pom.xml ( Maver의 스크립트 파일)

단점 



3. Graldle *Android Studio의 기본 빌드 도구 

빌드스크립트는 XML대신 프로그래밍 언어의 문법을 이용하여 빌드 작업을 좀 더 정밀하게 제어할 수 있다.
-> 더 복잡한 빌드작업을 수행할 수 있다.


build.gradle (grable의 빌드 스크립트 파일)


프로젝트 폴더준비 기능도 포함 되어있다.





mybatis-3 

메이븐



gradle.org 들어가서 설치하고 압축풀고 c드라이브에 tools  폴더 만들고
환경변수들어가서 gradle에 bin 폴더 위치 저장해주기



	DSL ( Domain - Specific Language )

JSP	Gradle
DSL	build.gradle (빌드스크립트)
java	Groovy,kotlin


		윈도우 일경우
		
* 실행파일
*.com 기계어	        실행                          app.com 찾아서 실행
*.exe  기계어	---------------------->app       app.exe 찾아서 실행
		 			   app.bat  찾아서 실행
*.bat - 스크립트 명령문

					나   그룹   손님
	             리눅스 일경우		111   101  101
					RWX RWX RWX
 app -> 실행 권한 부여($chmod 755 app)		
		      $ ls -al
		      $ app
		      $ ./app

.zshrc

export JAVA_HOME=`/usr/libexec/java_home -v 17`
export PATH=${JAVA_HOME}bin:$PATH

brew install gradle


mkdir board-app

cd board-app

gradle init

gradle -q run


 

