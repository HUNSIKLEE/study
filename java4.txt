명령문=스테이트먼트
익스프레스(결과가 생성되는 명령문)


부동소수점 사용법
-유효자릿수 7자리 이하의 값을 단순이 저장하고 꺼내는 경우  float 타입 사용
예) float height;
    float weight;


부동소수점에 대해 연산을 수행하는 경우 double 타입을 사용하라!
예) double average;
    double area;

좋은 코딩이란 다른사람이 봤을때 아예 잘못된 가능성을 배제 시키는 코딩


	*블록과 변수

{
	int =  a;
	//int =  a; 같은 블럭에서 가은 이름의 변수 선언불가!
	
}

{
	int = a; <- 블럭이 다르다면 상관없다.
}

	a= 100; <- 블럭을 벗어나면 사용불가!




			* Static type bindong vs dynamic type binding
			고정				동적



Java											Javascript
											
int a;										var a;		
1= 100; <변수의 타입은 변경할수 없다					a= 100; -> 값을 저장할때 변수의 타입이 결정된다.	
a = true;    X 								a = true;   다른 타입의 값을 저장하면 변수의 라인도 바뀐다
a = " aaa";  X								a= "aaa";	


			*서로 다른 타입의 데이터를 계산


		int 연산자 float
 		↓
              float		같은 타입으로 맞춘다음에 연산 수행




자동형변환 수행 => implicit tyoe comversion (암시적형변환)


byte		
short      -> int ------------long-----------float------------------->double
char		


				* 클래스 와 메서드
	
		수학관련 메서드를 분류= 도구를 담아두는 함 =도구함
	class Math {
		  abs(){-} <- 수학관련 메서드 = 수단,방법,도구
		round(){-}
		 max(){-}
		 min(){-}	




		*  &비트 연산자 응용

*&연산은 어떤 값에서 특정 비트를 차단(o)하고 						0110 0011	
			    특정 비트를 추출(1)하는					      &0000 1111		
			    효과가 있다.								0000  0011
													차단   추출
				 			%보다 계산속도가 더 빠르다
	varlue % 2 = value & ob0000_0001;
	varlue % 3 = x
	varlue % 4 = value & ob0000_0011;
	varlue % 5 = x
	varlue % 6 = x
	varlue % 7 = x
	varlue % 8 = value & ob0000_0111;
	varlue % 16 =value & ob0000_1111;
		
	


		


  System.out.println(54 & 0b0000_0001); 
실무에서 이코드를 보면 끝나는 값이 짝수인지 홀수인지 확인하는 코드




	
	
	
	
	











