<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitcamp.testproject.dao.PartyDao">

  <resultMap type="party" id="partyMap">
    <id column="pno" property="no"/>
    <result column="title" property="title"/>
    <result column="act" property="active"/>
    <result column="cont" property="content"/>
    <result column="cdt" property="createdDate"/>
    <result column="headcnt" property="headCount"/>
    <result column="ptime" property="partyTime"/>
    <result column="pdate" property="partyDate"/>
    <result column="star" property="star"/>
    <result column="thumbnail" property="thumbnail"/>

    <!-- 조인 결과에서 같은 게시글에 대해 한 개의 회원 데이터를 담을 경우 -->
    <association property="user" javaType="member">
      <id column="mno" property="no"/>
      <result column="nick" property="nickname"/>
      <result column="bday" property="birthday"/>
      <result column="sex" property="sex"/>
      <result column="filepath" property="filepath"/>
      <result column="ageGroup" property="ageGroup"/>
    </association>

    <!-- 조인 결과에서 같은 게시글에 대해 한 개의 회원 데이터를 담을 경우 -->
    <association property="region" javaType="region">
      <id column="rno" property="no"/>
      <result column="sido" property="sido"/>
      <result column="sigu" property="sigu"/>
    </association>

    <!-- 조인 결과에서 같은 게시글에 대해 한 개의 회원 데이터를 담을 경우 -->
    <association property="sports" javaType="sports">
      <id column="sno" property="no"/>
      <result column="name" property="name"/>
    </association>

    <collection property="attachedFiles" ofType="attachedFile">
      <id column="pfno" property="no"/>
      <result column="filepath" property="filepath"/>
      <result column="pno" property="objectNo"/>
    </collection>

  </resultMap>
  
  <resultMap type="attachedFile" id="attachedFileMap">
    <id column="pfno" property="no"/>
    <result column="filepath" property="filepath"/>
    <result column="pno" property="objectNo"/>
  </resultMap>
  
  <select id="findAll" resultMap="partyMap">
    select
      p.pno, 
      r.sido,
      r.sigu,
      s.name,
      p.title,
      p.cdt,
      p.headcnt,
      p.ptime,
      p.pdate,
      (select truncate(avg(star), 1) from party_review where pno=p.pno) as star,
      r.rno,
      s.sno,
      pf.filepath thumbnail
    from 
      party p
      join region r on p.rno = r.rno
      join sports s on p.sno = s.sno
      left join party_file pf on p.pno=pf.pno
    where
      p.act = 1
    order by 
      p.pno desc
  </select>
  
    <select id="findByNo" resultMap="partyMap">
    <![CDATA[
    select
			p.pno,
			r.sido,
			r.sigu,
			s.name,
			p.title,
			p.cont,
			p.cdt,
			p.headcnt,
			p.ptime,
			p.pdate,
			m.mno,
			m.nick,
			m.bday,
			m.sex,
			m.filepath,
			pf.filepath thumbnail,
			
		CASE
			WHEN age < 20 THEN '10대 이하'
			WHEN age < 30 THEN '20대'
			WHEN age < 40 THEN '30대'
			WHEN age < 50 THEN '40대'
			WHEN age < 60 THEN '50대'
			WHEN age > 59 THEN '60대 이상'
		END AS ageGroup
		from
			party p
			join region r on p.rno = r.rno
			join sports s on p.sno = s.sno
			join party_members pm on p.pno = pm.pno
			join member m on m.mno = pm.mno
			join (SELECT *, FLOOR(date_format(now(), '%Y')-substring(bday,1,4)) age FROM member) ag on ag.mno=m.mno
			left join party_file pf on p.pno=pf.pno
		where
			pm.auth=1
		and
			p.pno=#{value}
			]]>
  </select>
  
  <insert id="insert" parameterType="party"
          useGeneratedKeys="true" keyColumn="pno" keyProperty="no">
    insert into party(
      rno,
      sno,
      title,
      cont,
      headcnt,
      pdate,
      ptime) 
    values(
    #{regionNo},
    #{sportsNo},
    #{title},
    #{content},
    #{headCount},
    #{partyDate},
    #{partyTime})
  </insert>
  
  <insert id="insertFiles" parameterType="party">
    insert into party_file(filepath, pno)
    values
    <foreach collection="attachedFiles" item="partyFile" separator=",">
      (#{partyFile.filepath},#{no})
    </foreach>
  </insert>
  
  <update id="update" parameterType="party">
    update party set 
      title=#{title}, 
      cont=#{content},
      headcnt=#{headCount},
      pdate=#{partyDate},
      ptime=#{partyTime}
    where 
      pno=#{no}
  </update>
  
  <delete id="delete">
    delete from party
    where pno=#{value}
  </delete>

  <delete id="deleteFiles">
    delete from party_file
    where pno=#{value}
  </delete>

  <delete id="deleteFile">
    delete from party_file
    where pfno=#{value}
  </delete>

  <select id="findFileByNo" resultMap="attachedFileMap">
    select
      pfno,
      filepath,
      pno
    from
      party_file
    where
      pfno=#{value}
  </select>

  <select id="checkOwner" resultType="int">
    select 
      pm.mno
    from 
      party_members pm
    where 
      pm.auth=1
    and
      pm.pno=#{value}
  </select>

  <select id="findStarByNo" resultType="double">
    select
      ifnull (truncate(avg(star), 1), 0)
      as star    
    from       
      party_review     
    where       
      
      pno=#{value}
  </select>

  <select id="findNowPartyNo" resultType="int">
    SELECT 
      (AUTO_INCREMENT-1) no 
    FROM 
      information_schema.tables 
    WHERE 
      table_name = 'party'
  </select>

  
</mapper>



